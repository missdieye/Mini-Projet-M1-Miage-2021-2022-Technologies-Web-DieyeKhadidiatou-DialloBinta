{"remainingRequest":"D:\\UCA\\TechnosWeb\\tp3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UCA\\TechnosWeb\\tp3\\src\\components\\ListeDesRestaurants.vue?vue&type=template&id=212a514b&","dependencies":[{"path":"D:\\UCA\\TechnosWeb\\tp3\\src\\components\\ListeDesRestaurants.vue","mtime":1634626815746},{"path":"D:\\UCA\\TechnosWeb\\tp3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\tp3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\tp3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\tp3\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}