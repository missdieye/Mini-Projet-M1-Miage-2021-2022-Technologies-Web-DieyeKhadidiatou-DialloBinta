{"remainingRequest":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\Menu.vue?vue&type=template&id=9bcc0be2&scoped=true&","dependencies":[{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\Menu.vue","mtime":1636063971420},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}