{"remainingRequest":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\ListeDesRestaurants.vue?vue&type=style&index=0&id=212a514b&scoped=true&lang=css&","dependencies":[{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\ListeDesRestaurants.vue","mtime":1635157595782},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCmgxIHsNCiAgY29sb3I6IGJsdWU7DQp9DQoudGFibGUtbWQgew0KICBkaXNwbGF5OiBmbGV4Ow0KfQ0KLm1kLXRvb2xiYXItc2VjdGlvbi1zdGFydCBwIHsNCiAgICBkaXNwbGF5OiBjb250ZW50czsNCn0NCg=="},{"version":3,"sources":["ListeDesRestaurants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListeDesRestaurants.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <md-dialog-alert\r\n      :md-active.sync=\"notFound\"\r\n      md-content=\"Aucun restaurant ne correspond à votre recherche\"\r\n      md-confirm-text=\"ouff!\"\r\n    />\r\n\r\n    <h2>{{ msg }}</h2>\r\n    <div>\r\n      <md-button class=\"md-raised md-primary\" @click=\"restoModal=true\">\r\n        Ajouter un nouveau restaurant\r\n      </md-button>\r\n      <md-dialog :md-active.sync=\"restoModal\">\r\n        <md-dialog-title>Ajout d'un nouveau restaurant</md-dialog-title>\r\n        \r\n        <form @submit.prevent=\"ajouterRestaurant($event)\">\r\n\r\n          <md-dialog-content>\r\n              <md-field>\r\n                <label>Nom</label>\r\n                <md-input v-model=\"nom\" required></md-input>\r\n              </md-field>\r\n              <md-field>\r\n                <label>Cuisine</label>\r\n                <md-input v-model=\"cuisine\" required></md-input>\r\n              </md-field>\r\n              <md-field>\r\n                <label>Ville</label>\r\n                <md-input v-model=\"borough\" ></md-input>\r\n              </md-field>\r\n          </md-dialog-content>\r\n\r\n          <md-dialog-actions>\r\n            <md-button class=\"md-primary\" @click=\"restoModal= false\">Close</md-button>\r\n            <md-button class=\"md-primary\">Ajouter</md-button>\r\n          </md-dialog-actions>\r\n        </form>\r\n\r\n    </md-dialog>\r\n    </div>\r\n\r\n    \r\n\r\n    \r\n    <br />\r\n      <md-table \r\n        class=\"table-md\"\r\n        v-model=\"restaurants\"\r\n        md-sort=\"name\"\r\n        md-sort-order=\"asc\"\r\n        md-card>\r\n        <md-table-toolbar>\r\n          <div class=\"md-toolbar-section-start\">\r\n            <p>Nombre de restaurants par page: \r\n        <input \r\n        @change=\"getRestaurantsFromServer()\"\r\n        type=\"range\" min=2 max=100 value=10 v-model=\"pageSize\">\r\n        {{pageSize}}</p>\r\n          </div>\r\n\r\n          <md-field  class=\"md-toolbar-section-end\">\r\n              <md-input @input=\"chercherResto()\" v-model=\"nomRestoRechercher\" placeholder=\"Chercher par nom:\">\r\n              </md-input>\r\n          </md-field>\r\n        </md-table-toolbar>\r\n\r\n        <md-table-row \r\n          :style=\"{ backgroundColor: getColor(index) }\"\r\n          :class=\"{ bordureRouge: index === 2 }\"\r\n          slot=\"md-table-row\"\r\n          slot-scope=\"{ item, index }\"\r\n        >\r\n          \r\n          <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.name }}</md-table-cell>\r\n          <md-table-cell md-label=\"Cuisine\" md-sort-by=\"cuisine\">{{item.cuisine}}</md-table-cell>\r\n          <md-table-cell md-label=\"Ville\" md-sort-by=\"cuisine\">{{item.borough}}</md-table-cell>\r\n          <md-table-cell md-label=\"Action\">\r\n            <router-link :to=\"'/restaurant/' + item._id\"><button class=\"md-accent\"><md-icon>read_more</md-icon></button>\r\n            </router-link>\r\n          </md-table-cell>\r\n        </md-table-row>\r\n      </md-table>\r\n      <md-table-toolbar>\r\n        <div class=\"md-toolbar-section-start\">\r\n          <p>Nombre de restaurants : {{ nombreRestaurantsTotal }}</p>\r\n            <br> \r\n          <p>Nombre de Pages Total : {{ nbrePagesTotal }}</p>\r\n        \r\n        </div>\r\n        <div  class=\"md-toolbar-section-end\">\r\n          <md-button :disabled=\"page === 0\" @click=\"pagePrecedente()\"\r\n          >Précédente\r\n          </md-button\r\n            >&nbsp;&nbsp;\r\n          <md-button :disabled=\"page === nbrePagesTotal\" @click=\"pageSuivante()\"\r\n          >Suivante</md-button>\r\n        </div>\r\n      </md-table-toolbar>\r\n      \r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport _ from \"lodash\";\r\nexport default {\r\n  name: \"ListeDesRestaurants\",\r\n  data: () => {\r\n    return {\r\n      restaurants: [],\r\n      nom: \"\",\r\n      cuisine: \"\",\r\n      nombreRestaurantsTotal: 0,\r\n      page: 0,\r\n      pageSize: 10,\r\n      nbrePagesTotal: 0,\r\n      msg: \"\",\r\n      nomRestoRechercher: \"\",\r\n      notFound: false,\r\n      restoModal : false,\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(\"mounted\");\r\n    this.getRestaurantsFromServer();\r\n  },\r\n  methods: {\r\n    pagePrecedente() {\r\n      if (this.page == 0) return;\r\n\r\n      this.page--;\r\n      this.getRestaurantsFromServer();\r\n    },\r\n    pageSuivante() {\r\n      if (this.page === this.dernierePage) return;\r\n      this.page++;\r\n      this.getRestaurantsFromServer();\r\n    },\r\n    getRestaurantsFromServer() {\r\n      let url = \"http://localhost:8080/api/restaurants?\";\r\n      url += \"page=\" + this.page;\r\n      url += \"&pagesize=\" + this.pageSize;\r\n      url += \"&name=\" + this.nomRestoRechercher;\r\n\r\n      fetch(url)\r\n        .then((responseJSON) => {\r\n          //arow fonction conserve le bon \"this\".\r\n          responseJSON.json().then((resJs) => {\r\n            // Maintenant resJs est un vrai objet JavaScript\r\n            this.restaurants = resJs.data;\r\n            console.log(\"Restaurants récupérés\");\r\n            console.dir(this.restaurants);\r\n            this.nombreRestaurantsTotal = resJs.count;\r\n            this.nbrePagesTotal = Math.round(\r\n              this.nombreRestaurantsTotal / this.pageSize\r\n            );\r\n            if (this.nombreRestaurantsTotal <= 0) {\r\n              this.notFound = true;\r\n            } else {\r\n              this.notFound = false;\r\n            }\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    chercherResto: _.debounce(function () {\r\n      this.getRestaurantsFromServer();\r\n\r\n      // this.getRestaurantsFromServer();\r\n    }, 1000),\r\n    supprimerRestaurant(r) {\r\n      let url = \"http://localhost:8080/api/restaurants/\" + r._id;\r\n\r\n      fetch(url, {\r\n        method: \"DELETE\",\r\n      })\r\n        .then((responseJSON) => {\r\n          responseJSON.json().then((res) => {\r\n            // Maintenant res est un vrai objet JavaScript\r\n            console.log(res.msg);\r\n            this.msg = res.msg;\r\n\r\n            //On raffraichit la vue\r\n            this.getRestaurantsFromServer();\r\n          });\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        });\r\n    },\r\n    ajouterRestaurant(event) {\r\n      // Récupération du formulaire. Pas besoin de document.querySelector\r\n      // ou document.getElementById puisque c'est le formulaire qui a généré\r\n      // l'événement\r\n      let form = event.target;\r\n\r\n      // Récupération des valeurs des champs du formulaire\r\n      // en prévision d'un envoi multipart en ajax/fetch\r\n      let donneesFormulaire = new FormData(form);\r\n\r\n      let url = \"http://localhost:8080/api/restaurants\";\r\n\r\n      fetch(url, {\r\n        method: \"POST\",\r\n        body: donneesFormulaire,\r\n      })\r\n        .then((responseJSON) => {\r\n          responseJSON.json().then((res) => {\r\n            // Maintenant res est un vrai objet JavaScript\r\n            console.log(res.msg);\r\n            this.msg = res.msg;\r\n\r\n            //On raffraichit la vue\r\n            this.getRestaurantsFromServer();\r\n          });\r\n        })\r\n        .catch(function (err) {\r\n          console.log(err);\r\n        });\r\n      this.nom = \"\";\r\n      this.cuisine = \"\";\r\n    },\r\n    getColor(index) {\r\n      return index % 2 ? \"lightBlue\" : \"pink\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\nh1 {\r\n  color: blue;\r\n}\r\n.table-md {\r\n  display: flex;\r\n}\r\n.md-toolbar-section-start p {\r\n    display: contents;\r\n}\r\n</style>\r\n"]}]}