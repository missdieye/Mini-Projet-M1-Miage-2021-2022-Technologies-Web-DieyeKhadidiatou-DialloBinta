{"remainingRequest":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\Commande.vue?vue&type=template&id=c69f44ac&scoped=true&","dependencies":[{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\src\\components\\Commande.vue","mtime":1635919817563},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\UCA\\TechnosWeb\\Mini Projet M1 Miage 2021-2022 Technologies Web\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}