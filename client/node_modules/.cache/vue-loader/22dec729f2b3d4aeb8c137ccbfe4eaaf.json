{"remainingRequest":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UCA\\TechnosWeb\\bii\\client\\src\\components\\ListeDesRestaurants.vue?vue&type=style&index=0&id=212a514b&scoped=true&lang=css&","dependencies":[{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\src\\components\\ListeDesRestaurants.vue","mtime":1635497968000},{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1635497968000},{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1635497968000},{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1635497968000},{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1635497968000},{"path":"D:\\UCA\\TechnosWeb\\bii\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1635497968000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaDEgewogIGNvbG9yOiBibHVlOwp9Ci50YWJsZS1tZCB7CiAgZGlzcGxheTogZmxleDsKfQp1bC5tZC1saXN0LmluZm9zUmVzdG8gewogICAgZGlzcGxheTogY29udGVudHM7Cn0KdWwubWQtbGlzdC5pbmZvc1Jlc3RvIGIgewogICAgZm9udC1zaXplOiAxM3B4Owp9Cgo="},{"version":3,"sources":["ListeDesRestaurants.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ListeDesRestaurants.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n\n    <md-toolbar>\n      <md-list class=\"infosResto\">\n      <md-list-item>\n        <md-icon>dinner_dining</md-icon>\n        <span class=\"md-list-item-text\"><b>Nombre de restaurants par page :  </b></span>\n        <p><input type=\"range\" min=2 max=100 value=10 \n        @change=\"getRestaurantsFromServer()\" v-model=\"pageSize\">{{pageSize}}</p>\n      </md-list-item>\n      <md-list-item>\n        <md-icon><span class=\"material-icons\">restaurant</span></md-icon>\n        <span class=\"md-list-item-text\"><b>Nombre de restaurants: </b></span>\n        <p>{{ nombreRestaurantsTotal }}</p>\n      </md-list-item>\n      <md-list-item>\n         <md-icon>pages</md-icon>\n        <span class=\"md-list-item-text\"><b>Nombre de Pages Total :  </b></span>\n        <p>{{ nbrePagesTotal }}</p>\n      </md-list-item>\n      </md-list>\n    </md-toolbar>\n    <br />\n      <md-table \n        class=\"table-md\"\n        v-model=\"restaurants\"\n        md-sort=\"name\"\n        md-sort-order=\"asc\"\n        md-card>\n        <md-table-toolbar>\n          <div class=\"md-toolbar-section-start\">\n            <md-button class=\"md-raised md-primary\" @click=\"restoModal=true\">\n              <md-icon><span class=\"material-icons\">add</span></md-icon>Ajouter un nouveau restaurant\n            </md-button>\n            <md-dialog :md-active.sync=\"restoModal\">\n              <md-dialog-title>Ajout d'un nouveau restaurant</md-dialog-title>\n              \n              <form @submit.prevent=\"ajouterRestaurant($event)\">\n\n                <md-dialog-content>\n                    <md-field>\n                      <label>Nom</label>\n                      <md-input v-model=\"nom\" name=\"nom\" required></md-input>\n                    </md-field>\n                    <md-field>\n                      <label>Cuisine</label>\n                      <md-input v-model=\"cuisine\" name=\"cuisine\" required></md-input>\n                    </md-field>\n                    <md-field>\n                      <label>Ville</label>\n                      <md-input v-model=\"borough\" name=\"borough\"></md-input>\n                    </md-field>\n                </md-dialog-content>\n\n                <md-dialog-actions>\n                  <md-button class=\"md-primary\" @click=\"restoModal= false\">Close</md-button>\n                  <md-button type=\"submit\" class=\"md-primary\">Ajouter</md-button>\n                </md-dialog-actions>\n              </form>\n\n            </md-dialog>\n          </div>\n\n          <md-field  class=\"md-toolbar-section-end\">\n              <md-input @input=\"chercherResto()\" v-model=\"nomRestoRechercher\" placeholder=\"Chercher par nom:\">\n              </md-input>\n          </md-field>\n        </md-table-toolbar>\n\n        <md-table-empty-state\n        md-label=\"Aucun restaurant trouvé\"\n        :md-description=\"`Aucun restaurant ne correspond à votre recherche!`\">\n        </md-table-empty-state>\n\n        <md-table-row \n          :style=\"{ backgroundColor: getColor(index) }\"\n          :class=\"{ bordureRouge: index === 2 }\"\n          slot=\"md-table-row\"\n          slot-scope=\"{ item, index }\"\n        >\n          \n          <md-table-cell md-label=\"Name\" md-sort-by=\"name\">{{ item.name }}</md-table-cell>\n          <md-table-cell md-label=\"Cuisine\" md-sort-by=\"cuisine\">{{item.cuisine}}</md-table-cell>\n          <md-table-cell md-label=\"Ville\" md-sort-by=\"cuisine\">{{item.borough}}</md-table-cell>\n          <md-table-cell md-label=\"Action\">\n            <router-link :to=\"'/restaurant/' + item._id\"><button class=\"md-accent\"><md-icon>read_more</md-icon></button>\n            </router-link>\n          </md-table-cell>\n        </md-table-row>\n      </md-table>\n      <md-toolbar>\n        <div class=\"md-toolbar-section-start\">\n        \n        </div>\n        <div  class=\"md-toolbar-section-end\">\n          <md-button :disabled=\"page === 0\" @click=\"pagePrecedente()\"\n          >Précédente\n          </md-button\n            >&nbsp;&nbsp;\n          <md-button :disabled=\"page === nbrePagesTotal\" @click=\"pageSuivante()\"\n          >Suivante</md-button>\n        </div>\n      </md-toolbar>\n      \n  </div>\n</template>\n\n\n<script>\nimport _ from \"lodash\";\nexport default {\n  name: \"ListeDesRestaurants\",\n  data: () => {\n    return {\n      restaurants : [],\n      nom: \"\",\n      cuisine: \"\",\n      borough : \"\",\n      nombreRestaurantsTotal: 0,\n      page: 0,\n      pageSize: 10,\n      nbrePagesTotal: 0,\n      msg: \"\",\n      nomRestoRechercher: \"\",\n      notFound: false,\n      restoModal : false,\n    };\n  },\n  mounted() {\n    this.getRestaurantsFromServer();\n  },\n  methods: {\n    pagePrecedente() {\n      if (this.page == 0) return;\n\n      this.page--;\n      this.getRestaurantsFromServer();\n    },\n    pageSuivante() {\n      if (this.page === this.dernierePage) return;\n      this.page++;\n      this.getRestaurantsFromServer();\n    },\n    getRestaurantsFromServer() {\n      let url = \"http://localhost:8080/api/restaurants?\";\n      url += \"page=\" + this.page;\n      url += \"&pagesize=\" + this.pageSize;\n      url += \"&name=\" + this.nomRestoRechercher;\n\n      fetch(url)\n        .then((responseJSON) => {\n          //arow fonction conserve le bon \"this\".\n          responseJSON.json().then((resJs) => {\n            // Maintenant resJs est un vrai objet JavaScript\n            this.restaurants = resJs.data;\n            console.dir(this.restaurants);\n            this.nombreRestaurantsTotal = resJs.count;\n            this.nbrePagesTotal = Math.round(\n              this.nombreRestaurantsTotal / this.pageSize\n            );\n            if (this.nombreRestaurantsTotal <= 0) {\n              this.notFound = true;\n            } else {\n              this.notFound = false;\n            }\n          });\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    chercherResto: _.debounce(function () {\n      this.getRestaurantsFromServer();\n\n      // this.getRestaurantsFromServer();\n    }, 1000),\n    supprimerRestaurant(r) {\n      let url = \"http://localhost:8080/api/restaurants/\" + r._id;\n\n      fetch(url, {\n        method: \"DELETE\",\n      })\n        .then((responseJSON) => {\n          responseJSON.json().then((res) => {\n            // Maintenant res est un vrai objet JavaScript\n            console.log(res.msg);\n            this.msg = res.msg;\n\n            //On raffraichit la vue\n            this.getRestaurantsFromServer();\n          });\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    },\n    ajouterRestaurant(event) {\n      // Récupération du formulaire. Pas besoin de document.querySelector\n      // ou document.getElementById puisque c'est le formulaire qui a généré\n      // l'événement\n      let form = event.target;\n\n      // Récupération des valeurs des champs du formulaire\n      // en prévision d'un envoi multipart en ajax/fetch\n      let donneesFormulaire = new FormData(form);\n\n      let url = \"http://localhost:8080/api/restaurants\";\n\n      fetch(url, {\n        method: \"POST\",\n        body: donneesFormulaire,\n      })\n        .then((responseJSON) => {\n          responseJSON.json().then((res) => {\n            // Maintenant res est un vrai objet JavaScript\n            console.log(res.msg);\n            this.msg = res.msg;\n\n            //On raffraichit la vue\n            this.getRestaurantsFromServer();\n          });\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n      this.nom = \"\";\n      this.cuisine = \"\";\n      this.borough = \"\";\n\n    },\n    getColor(index) {\n      return index % 2 ? \"lightBlue\" : \"pink\";\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color: blue;\n}\n.table-md {\n  display: flex;\n}\nul.md-list.infosResto {\n    display: contents;\n}\nul.md-list.infosResto b {\n    font-size: 13px;\n}\n\n</style>\n"]}]}